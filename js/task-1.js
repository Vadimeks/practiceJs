// console.log("hello world");

// let number = Number(prompt("Enter a number"));
// console.log(number);
// ______________________

// 4;
// console.log("üöÄ ~ 4:", 4);

// –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é prompt().
// –ó–±–µ—Ä–µ–∂—ñ—Ç—å –≤–≤–µ–¥–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —É –∑–º—ñ–Ω–Ω—É number.
// –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –¥–æ—Ä—ñ–≤–Ω—é—î –∑–º—ñ–Ω–Ω–∞ number —á–∏—Å–ª—É 10:
//    –Ø–∫—â–æ —Ç–∞–∫ ‚Äì –≤–∏–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è '–í—ñ—Ä–Ω–æ' —É alert().
//    –Ø–∫—â–æ –Ω—ñ ‚Äì –≤–∏–≤–µ–¥—ñ—Ç—å '–ù–µ–≤—ñ—Ä–Ω–æ'.

// –ü—ñ–¥–∫–∞–∑–∫–∞: prompt –∑–∞–≤–∂–¥–∏ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ (String), —Ç–æ–º—É –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
// –ø–µ—Ä–µ—Ç–≤–æ—Ä—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞ —á–∏—Å–ª–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Number().
// ============================

// let number = Number(prompt("Enter a number"));
// number === 10 ? alert("–í—ñ—Ä–Ω–æ") : alert("–ù–µ–≤—ñ—Ä–Ω–æ");
// if (number === 10) {
//   alert("–í—ñ—Ä–Ω–æ");
// } else {
//   alert("–ù–µ–≤—ñ—Ä–Ω–æ");
// }
// console.log(number);
// ++++++++++++

// –£ –∑–º—ñ–Ω–Ω—ñ–π min –ª–µ–∂–∏—Ç—å –≤–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ 59.
// –í–∏–∑–Ω–∞—á—Ç–µ, –≤ —è–∫—É —á–≤–µ—Ä—Ç—å –≥–æ–¥–∏–Ω–∏ –ø–æ—Ç—Ä–∞–ø–ª—è—î
// —Ü–µ —á–∏—Å–ª–æ (—É –ø–µ—Ä—à—É, –¥—Ä—É–≥—É, —Ç—Ä–µ—Ç—é —á–∏ —á–µ—Ç–≤–µ—Ä—Ç—É).
// –í–∏–≤–µ–¥—ñ—Ç—å –≤ alert –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:
// "10 –≤—Ö–æ–¥–∏—Ç—å –≤ –ø–µ—Ä—à—É —á–≤–µ—Ä—Ç—å"

// const min = Math.floor(Math.random() * (59 - 0) + 0);
// const min = Math.floor(Math.random() * (59 - 0) + 0);
// if (min >= 0 && min <= 15) {
//   alert(`${min} –≤—Ö–æ–¥–∏—Ç—å –≤ –ø–µ—Ä—à—É —á–≤–µ—Ä—Ç—å`);
// } else if (min > 15 && min <= 30) {
//   alert(`${min} –≤—Ö–æ–¥–∏—Ç—å –≤ –¥—Ä—É–≥—É —á–≤–µ—Ä—Ç—å`);
// } else if (min > 30 && min <= 45) {
//   alert(`${min} –≤—Ö–æ–¥–∏—Ç—å –≤ —Ç—Ä–µ—Ç—é —á–≤–µ—Ä—Ç—å`);
// } else {
//   alert(`${min} –≤—Ö–æ–¥–∏—Ç—å –≤ —á–µ—Ç–≤–µ—Ä—Ç—É —á–≤–µ—Ä—Ç—å`);
// }

// console.log(timeZone);
// –ó–º—ñ–Ω–Ω–∞ num –º–æ–∂–µ –Ω–∞–±—É–≤–∞—Ç–∏ 4 –∑–Ω–∞—á–µ–Ω–Ω—è: '1', '2', '3' –∞–±–æ '4'
// (–∑–∞–ø–∏—Ç—É–π —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ prompt).
// –Ø–∫—â–æ –≤–æ–Ω–∞ –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è '1', —Ç–æ —É –∑–º—ñ–Ω–Ω—É result –∑–∞–ø–∏—à—ñ—Ç—å '–∑–∏–º–∞',
// —è–∫—â–æ –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è '2' - '–≤–µ—Å–Ω–∞' —ñ —Ç–∞–∫ –¥–∞–ª—ñ.
// –†–æ–∑–≤'—è–∂—ñ—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è —á–µ—Ä–µ–∑ switch-case.
// –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –¥–µ—Ñ–æ–ª—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, –Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
// –≤–≤–µ–¥–µ –≤ prompt —â–æ—Å—å —ñ–Ω—à–µ. –í —Ç–∞–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É result –º–∞—î –Ω–∞–±—É–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è:
// "–í–∏–±–∞—á—Ç–µ, –∞–ª–µ –≤–∏ –º–∞—î—Ç–µ –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥ 1 –¥–æ 4 –≤–∫–ª—é—á–Ω–æ".
// –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó result –≤–∏–≤–µ–¥—ñ—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å.

// const num = prompt("Enter number from 1 to 4");
// let result;

// if (["1", "2", "3", "4"].includes(num)) {
//   // –î–∞–∑–≤–æ–ª–µ–Ω—ã—è –∑–Ω–∞—á—ç–Ω–Ω—ñ
//   switch (num) {
//     case "1":
//       result = "–∑–∏–º–∞";
//       break;
//     case "2":
//       result = "–≤–µ—Å–Ω–∞";
//       break;
//     case "3":
//       result = "–ª—ñ—Ç–æ";
//       break;
//     case "4":
//       result = "–æ—Å—ñ–Ω—å";
//       break;
//   }
// } else {
//   result = "–ù–µ–∫–∞—Ä—ç–∫—Ç–Ω–∞–µ –∑–Ω–∞—á—ç–Ω–Ω–µ. –£–≤—è–¥–∑—ñ—Ü–µ –ª—ñ–∫—ñ –∞–¥ 1 –¥–∞ 4.";
// }
// console.log(result);
// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —Ü–∏–∫–ª while, —â–æ–± –≤–∏–≤–µ—Å—Ç–∏ –≤ console –≤—Å—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ 0 –¥–æ 20 –≤–∫–ª—é—á–Ω–æ.

// let i = 0;
// while (i <= 20) {
//   console.log(i);
//   i++;
// }
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getNumbers(min, max), —â–æ –ø—Ä–∏–π–º–∞—î 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ -
// –º—ñ–Ω—ñ–º–∞–ª—å–Ω–µ —ñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ —á–∏—Å–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ü–∏–∫–ª –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å
// –≤—Å—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ max –¥–æ min –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º.
// –û–∫—Ä—ñ–º —Ü—å–æ–≥–æ, –ø—ñ–¥—Ä–∞—Ö—É–π—Ç–µ —Å—É–º—É –≤—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –≤ —Ü—å–æ–º—É —Ü–∏–∫–ª—ñ
// —ñ –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å —ó—ó –∑ —Ñ—É–Ω–∫—Ü—ñ—ó.
// function getNumbers(min, max) {
//   let sum = 0;
//   for (let i = max; i >= min; i -= 1) {
//     console.log(i);
//     if (i % 2 === 0) {
//       sum += i;
//     }
//   }
//   console.log(sum);
// }
// getNumbers(1, 10);
// getNumbers(5, 55);

// –û—Ç—Ä–∏–º—É–π—Ç–µ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–∏—Å–ª–æ (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —á–µ—Ä–µ–∑ prompt
// —ñ –≤–∏–≤–æ–¥—å—Ç–µ —É –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω —Ç–∞ —Ö–≤–∏–ª–∏–Ω.
// –ü—Ä–∏–∫–ª–∞–¥: –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –≤ prompt '70' -> –≤ –∫–æ–Ω—Å–æ–ª—ñ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç—å—Å—è '01:10'.
// –ö–æ—Ä–∏—Å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–æ–¥–∏–Ω —Ç–∞ —Ö–≤–∏–ª–∏–Ω —É –ø–æ—Ç—Ä—ñ–±–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ ('01' –∑–∞–º—ñ—Å—Ç—å '1'):
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart#examples
// –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –¥–æ–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –≤–≤–µ–¥–µ–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –∑–Ω–∞—á–µ–Ω–Ω—è:
// –Ø–∫—â–æ –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å "–ê–¥–º—ñ–Ω",
// —Ç–æ prompt –∑–∞–ø–∏—Ç—É—î –ø–∞—Ä–æ–ª—å (–Ω–µ –∑–∞–±—É–¥—å—Ç–µ –∑–±–µ—Ä—ñ–≥—Ç–∏ –π–æ–≥–æ —É –∑–º—ñ–Ω–Ω—É –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏).
// –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ Cancel,
// –í–∏–≤–µ—Å—Ç–∏ –≤ alert —Å—Ç—Ä–æ–∫—É "–°–∫–∞—Å–æ–≤–∞–Ω–æ"
// –í —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –≤–∏–≤–µ—Å—Ç–∏ –≤ alert —Ä—è–¥–æ–∫ "–Ø –≤–∞—Å –Ω–µ –∑–Ω–∞—é"
// –ü–∞—Ä–æ–ª—å –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Ç–∞–∫:
// –Ø–∫—â–æ –≤–≤–µ–¥–µ–Ω–æ –ø–∞—Ä–æ–ª—å "–Ø –≥–æ–ª–æ–≤–Ω–∏–π",
// —Ç–æ –≤–∏–≤–µ—Å—Ç–∏ –≤ alert —Ä—è–¥–æ–∫ "–î–æ–±—Ä–∏–π –¥–µ–Ω—å!",
// –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –≤–∏–≤–µ—Å—Ç–∏ –≤ alert —Ä—è–¥–æ–∫ "–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å!"
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é min(a, b), —è–∫–∞ –ø—Ä–∏–π–º–∞—î 2 —á–∏—Å–ª–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –º–µ–Ω—å—à–µ –∑ –Ω–∏—Ö.
// –ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º—É—î —Å–∞–º–µ —á–∏—Å–ª–∞, –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É
// –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∑ —Ñ—É–Ω–∫—Ü—ñ—ó —Ä—è–¥–æ–∫ - 'Not a number!'.
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é fizzBuzz(num), —è–∫–∞ –ø—Ä–∏–π–º–∞—î —á–∏—Å–ª–æ —ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –∫–æ–∂–Ω–µ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ num:
// –Ø–∫—â–æ —á–∏—Å–ª–æ –¥—ñ–ª–∏—Ç–∏—Å—è  –±–µ–∑ –æ—Å—Ç–∞—á—ñ –Ω–∞ 3 - –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å 'fizz',
// —è–∫—â–æ –¥—ñ–ª–∏—Ç—å—Å—è  –±–µ–∑ –æ—Å—Ç–∞—á—ñ –Ω–∞ 5 - –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å 'buzz',
// —è–∫—â–æ –¥—ñ–ª–∏—Ç—å—Å—è  –±–µ–∑ –æ—Å—Ç–∞—á—ñ —ñ –Ω–∞ 3, —ñ –Ω–∞ 5 - –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å 'fizzbuzz'.
// function getEvenNumbers(start, end) {
//   let num = [];
//   for (let i = start; i <= end; i += 1) {
//     if (i % 2 === 0) {
//       num.push(i);
//     }
//   }
//   return num;
// }

// console.log(getEvenNumbers(5, 15)); // –í—ã–Ω—ñ–∫: [8, 10]
// function calculateTotalPrice(order) {
//   let total = 0;
//   for (let i = 0; i < order.length; i++) {
//     total += order[i];
//   }
//   return total;
// }
// console.log(calculateTotalPrice([12, 85, 37, 4]));
// function checkStorage(storage, item) {

//   if (storage.includes(item.toLowerCase())) {
//     return `${item} is available to order!`;
//   } else {
//     return "Sorry! We are out of stock!";
//   }
// }

// console.log(checkStorage(["apple", "plum", "pear"], "pLuM"));
// function getCommonElements(array1, array2) {
//   const newArray = [];
//   for (i = 0; i <= array1.length - 1; i += 1) {
//     if (array2.includes(array1[i])) {
//       newArray = newArray.push(array1[i]);
//     }
//   }
//   return newArray;
// }
// console.log(getCommonElements([1, 2, 3], [2, 4]));
// const planets = ["Earth", "Mars", "Venus"];

// for (const planet of planets) {
//   console.log(planet);
// }
// function createReversedArray() {
//   const args = Array.from(arguments);
//   return args.toReversed();
// }
// console.log(createReversedArray(12, 85, 37, 4));

// function calculateTax(amount, taxRate = 0.2) {
//   let total = 0;

//   return (total = amount * taxRate);
// }
// console.log(calculateTax(150, 0.5));
// function getProductPrice(productName) {
//   const products = [
//     { name: "Radar", price: 1300, quantity: 4 },
//     { name: "Scanner", price: 2700, quantity: 3 },
//     { name: "Droid", price: 400, quantity: 7 },
//     { name: "Grip", price: 1200, quantity: 9 },
//   ];

//   for (const product of products) {
//     if (product.name === productName) {
//       return product.price;
//     }
//   }
//   return null;
// }

// console.log(getProductPrice("Radar"));
// function getAllPropValues(propName) {
//   const products = [
//     { name: "Radar", price: 1300, quantity: 4 },
//     { name: "Scanner", price: 2700, quantity: 3 },
//     { name: "Droid", price: 400, quantity: 7 },
//     { name: "Grip", price: 1200, quantity: 9 },
//   ];
//   const getAll = [];
//   for (const product of products) {
//     if (product[propName] !== undefined) {
//       getAll.push(product[propName]);
//     }
//   }
//   return getAll;
// }

// console.log(getAllPropValues("price")); // –í—ã–Ω—ñ–∫: [1300, 2700, 400, 1200]
// function calculateTotalPrice(productName) {
//   const products = [
//     { name: "Radar", price: 1300, quantity: 4 },
//     { name: "Scanner", price: 2700, quantity: 3 },
//     { name: "Droid", price: 400, quantity: 7 },
//     { name: "Grip", price: 1200, quantity: 9 },
//   ];

//   for (const product of products) {
//     if (product.name === productName) {
//       return product.price * product.quantity;
//     }
//   }

//   return `Product ${productName} not found!`;
// }

// console.log(calculateTotalPrice("Radar")); // –í—ã–Ω—ñ–∫: 5200
// console.log(calculateTotalPrice("Scanner")); // –í—ã–Ω—ñ–∫: 8100
// console.log(calculateTotalPrice("Nonexistent")); // –í—ã–Ω—ñ–∫: Product Nonexistent not found!
// function getExtremeScores(scores) {
//   let best = 0;
//   let worst = 0;
//   for (const score of scores) {
//     best = Math.max(...scores);
//     worst = Math.min(...scores);
//   }
//   return `{best:${best}, worst:${worst}}`;
// }
// console.log(getExtremeScores([89, 64, 42, 17, 93, 51, 26]));
// console.log(getExtremeScores([19, 7, 4, 17, 81, 24]));
// const firstGroupScores = [64, 42, 93];
// const secondGroupScores = [89, 14, 51, 26];
// const thirdGroupScores = [29, 47, 18, 97, 81];

// const allScores = [
//   ...firstGroupScores,
//   ...secondGroupScores,
//   ...thirdGroupScores,
// ];
// const bestScore = Math.max(...allScores);
// const worstScore = Math.min(...allScores);
// console.log(bestScore);
// console.log(worstScore);
